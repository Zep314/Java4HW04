// Алгоритмы и структуры данных (семинары)
// Урок 4. Структуры данных дерево и хэш-таблица
//
//Необходимо превратить собранное на семинаре дерево поиска в полноценное левостороннее красно-черное дерево.
// И реализовать в нем метод добавления новых элементов с балансировкой.
//
//Красно-черное дерево имеет следующие критерии:
// - Каждая нода имеет цвет (красный или черный)
// - Корень дерева всегда черный
// - Новая нода всегда красная
// - Красные ноды могут быть только левым ребенком
// - У красной ноды все дети черного цвета
//
// Соответственно, чтобы данные условия выполнялись, после добавления элемента в дерево необходимо
// произвести балансировку, благодаря которой все критерии выше станут валидными. Для балансировки
// существует 3 операции – левый малый поворот, правый малый поворот и смена цвета.

package com.my;

import controller.Controller;

public class Main {  // Точка входа в программу
    public static void main(String[] args) {
        Controller controller = new Controller();
        controller.run();
    }
}

// https://www.happycoders.eu/algorithms/red-black-tree-java/